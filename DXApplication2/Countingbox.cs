using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using DataHandler;

namespace DXApplication2
{
    public partial class CountingBox : DevExpress.XtraEditors.XtraUserControl
    {
        Users loggeduser = new Users();
        CompCashOptions cashoperoptions = new CompCashOptions();
        List<CashOperationsSet> cashoperationlist = new List<CashOperationsSet>();
        CashOperationsSet cashoperation = new CashOperationsSet();
        string[] typesitems;
        string[] Accitems;




        public CountingBox(Users LoggedUser)
        {
            InitializeComponent();
            // InitTextboxes();

            //IsEdit = true;
            loggeduser = LoggedUser;
            LoggedUserText.Text = LoggedUser.Name;








            cashoperationlist.AddRange(cashoperoptions.GetCompOperations());
            gridControl1.DataSource = cashoperationlist;
            typesitems = cashoperoptions.GetCompOperationstypesItems();
            Accitems = cashoperoptions.GetBankAccountsItems();
            typesCB.Properties.Items.AddRange(typesitems);
            AccountsCB.Properties.Items.AddRange(Accitems);




            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //    DataHandler.ContabilidadEntities dbContext = new DataHandler.ContabilidadEntities();
            //    // Call the Load method to get the data for the given DbSet from the database.
            //    dbContext.CashOperationsSet.Load();
            //    // This line of code is generated by Data Source Configuration Wizard
            //    cashOperationsSetBindingSource.DataSource = dbContext.CashOperationsSet.Local.ToBindingList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            DataHandler.ContabilidadEntities dbContext = new DataHandler.ContabilidadEntities();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.BankAccountsSet.Load();
            // This line of code is generated by Data Source Configuration Wizard
            bankAccountsSetBindingSource.DataSource = dbContext.BankAccountsSet.Local.ToBindingList();
        }

        private bool Validatedata(string data)
        {

            if (String.IsNullOrWhiteSpace(data))
                return false;
            
            return true;


        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            decimal value=0;
            bool isincome = false;
          var optype= cashoperoptions.GetCompOperationstypesId(typesCB.Text);
            var accountid = cashoperoptions.GetBankAccountId(typesCB.Text);

            if (Validatedata(IncomeEdit.Text))
            {
                value = decimal.Parse(IncomeEdit.Text);

                isincome = true;

                CashOperationsSet newoper = new CashOperationsSet()
                {
                    Value = value,
                    IsIncome = isincome,
                    Details = DetailsEdit.Text,
                    IsBank = Isbank.Checked,
                    UserId = loggeduser.UserID,
                    CompanyId = 1,
                    CashOPDate = DateTime.Now,
                    CashOPTypeId=optype.CashOpTypesId,
                    AccountId = accountid
                    

                };
               
                cashoperoptions.AddCashOPeration(newoper);
               newoper.CashOperationsTypesSet = optype;
                cashoperationlist.Add(newoper);
            }
            if (Validatedata(ExpenseEdit.Text)&!isincome)
            {
                value = decimal.Parse(ExpenseEdit.Text);


                CashOperationsSet newoper = new CashOperationsSet()
                {
                    Value = value,
                    IsIncome = isincome,
                    Details = DetailsEdit.Text,
                    IsBank = Isbank.Checked,
                    UserId = loggeduser.UserID,
                    CompanyId = 1,
                    CashOPDate = DateTime.Now,
                     CashOPTypeId = optype.CashOpTypesId

                };

              

                 cashoperoptions.AddCashOPeration(newoper);
                newoper.CashOperationsTypesSet = optype;
                  cashoperationlist.Add(newoper);
           }

            gridView1.RefreshData();
            ExpenseEdit.Text = string.Empty;
            IncomeEdit.Text = string.Empty;
            DetailsEdit.Text = string.Empty;
            Isbank.Checked = false;


        }

        private void AdminCBtn_CheckedChanged(object sender, EventArgs e)
        {
            TimeSpan month = new TimeSpan(30, 0, 0, 0, 0);
            //cashoperationlist.Clear();
            //cashoperationlist.AddRange(cashoperoptions.GetCompOperations(DateTime.Now-month,DateTime.Now));
            //gridView1.RefreshData();
            dateEdit1.DateTime = DateTime.Now - month;
            dateEdit2.DateTime = DateTime.Now;
        }

        private void L3mestB_CheckedChanged(object sender, EventArgs e)
        {
            TimeSpan threemonth = new TimeSpan(90, 0, 0, 0, 0);
            //cashoperationlist.Clear();
            //cashoperationlist.AddRange(cashoperoptions.GetCompOperations(DateTime.Now - threemonth, DateTime.Now));
            //gridView1.RefreshData();
            dateEdit1.DateTime = DateTime.Now - threemonth;
            dateEdit2.DateTime = DateTime.Now;
        }

        private void LyearB_CheckedChanged(object sender, EventArgs e)
        {
            TimeSpan year = new TimeSpan(365, 0, 0, 0, 0);
            //cashoperationlist.Clear();
            //cashoperationlist.AddRange(cashoperoptions.GetCompOperations(DateTime.Now - year, DateTime.Now));
            //gridView1.RefreshData();
            dateEdit1.DateTime = DateTime.Now - year;
            dateEdit2.DateTime = DateTime.Now;
        }

        private void dateEdit1_EditValueChanged(object sender, EventArgs e)
        {
            cashoperationlist.Clear();
            cashoperationlist.AddRange(cashoperoptions.GetCompOperations(dateEdit1.DateTime, dateEdit2.DateTime));
            gridView1.RefreshData();
        }

        private void dateEdit2_EditValueChanged(object sender, EventArgs e)
        {
            cashoperationlist.Clear();
            cashoperationlist.AddRange(cashoperoptions.GetCompOperations(dateEdit1.DateTime, dateEdit2.DateTime));
            gridView1.RefreshData();
        }

        private void simpleButton14_Click(object sender, EventArgs e)
        {
            if (!typesitems.Contains(typesCB.Text)&!string.IsNullOrWhiteSpace(typesCB.Text))
                cashoperoptions.AddCompOperationstype(typesCB.Text);

        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {


            if (!Accitems.Contains(AccountsCB.Text) & !string.IsNullOrWhiteSpace(AccountsCB.Text))
                cashoperoptions.AddCompOperationstype(AccountsCB.Text);
        }
    }
}
