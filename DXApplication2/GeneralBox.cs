using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using DataHandler;

namespace DXApplication2
{
    public partial class GeneralBox : DevExpress.XtraEditors.XtraUserControl
    {
        bool IsEdit = false;
        PartnersSet newpartner = new PartnersSet();
        PartnersSet SelectedPartner = new PartnersSet();
        PartnersOptions partnersoptions = new PartnersOptions();
        DataHandler.ContabilidadEntities dbContext = new DataHandler.ContabilidadEntities();
      
       ContabilidadEntities usercont = new ContabilidadEntities();
     
        List<PartnersSet> partnerList = new List<PartnersSet>();

        OperationsOptionscs operationoptions = new OperationsOptionscs();

        Users loggeduser;


        public GeneralBox(Users Loggeduser)
        {
            loggeduser = Loggeduser;
            InitializeComponent();
           
            //InitTextboxes();
            //LoggedUserText.Text = string.Format("{0} {1}", Loggeduser.Name, Loggeduser.LastName);

            //newuser.Permisions = null;
           


            // gridControl1.DataSource = partnerList;

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            DataHandler.ContabilidadEntities dbContext = new DataHandler.ContabilidadEntities();
           // Call the Load method to get the data for the given DbSet from the database.
          // dbContext.ServicesSet.Load()
           // This line of code is generated by Data Source Configuration Wizard
          //  servicesSetBindingSource.DataSource = dbContext.ServicesSet.Local.ToBindingList();
        }

        private void groupControl1_Paint(object sender, PaintEventArgs e)
        {

        }


        //private void InitTextboxes()
        //{
        //    NameEdit.DataBindings.Add("EditValue", SelectedUser, "Name");
        //    LNameEdit.DataBindings.Add("EditValue", SelectedUser, "LastName");
        //    NotesEdit.DataBindings.Add("EditValue", SelectedUser, "Notes");
        //    EmailEdit.DataBindings.Add("EditValue", SelectedUser, "Email");
        //    PNickEdit.DataBindings.Add("EditValue", SelectedUser, "Login");
        //}

        //private void FillPermissions()
        //{
        //    PermissionsOptions permissiontypes = new PermissionsOptions();
           
        // PermissionsTree.DataSource = permissiontypes.GetPermissionsTypesAcces(false);
        //    UserAlowTree.DataSource = permissiontypes.GetPermissionsTypesAcces(true);
        //    PermissionsTree.KeyFieldName = "PermissionsTypesID";
        //    PermissionsTree.ParentFieldName = "IsUserID";
        //    //PermissionsTree.da
        // int aas =    PermissionsTree.Nodes.Count;
        //    //PermissionsTypes [] perlist = permissiontypes.GetPermissionsTypesAcces(true);
        //    //for (int i = 0; i < perlist.Length; i++)
        //    //{
        //    //    DevExpress.XtraTreeList.Nodes.TreeListNode dfd;
              
        //    //    PermissionsTree.AppendNode(perlist[i], PermissionsTree.Nodes[0]);
               

               

        //    //}



        //    //   PermissionsTree.Nodes[0].Nodes.Add(permissiontypes.GetPermissionsTypesAcces(false));

        //}

      

      

        // This event is generated by Data Source Configuration Wizard
        

        // This event is generated by Data Source Configuration Wizard
        

       
        

      

       

       
       


   
        

        


       

       

     

     

       


        


        private void simpleButton1_Click_1(object sender, EventArgs e)
        {
         //   ConmitChanges();
        }

        private void simpleButton5_Click(object sender, EventArgs e)
        {
         //   EditMode();
        }

        private void simpleButton6_Click(object sender, EventArgs e)
        {
          //  SetInactive();
        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {
            
            NewOperation newop = new NewOperation(loggeduser);
            newop.FormClosed += Newop_FormClosed;
            newop.Show();
          //  AddNew();
        }

        private void Newop_FormClosed(object sender, FormClosedEventArgs e)
        {
            gridControl1.DataSource = operationoptions.GetServices(dateEdit1.DateTime, dateEdit2.DateTime);
            gridView1.RefreshData();

        }

        private void gridView1_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            if (e.Clicks == 2)
            {
                var service = ((ServicesSet[])gridView1.DataSource)[gridView1.ViewRowHandleToDataSourceIndex(gridView1.FocusedRowHandle)];
                NewOperation editoperation = new NewOperation(loggeduser, service);
                editoperation.Show();
            }
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            DateTime lastmonth = DateTime.Now - TimeSpan.FromDays(7);
            dateEdit2.DateTime = lastmonth;
            Populategrid(lastmonth, DateTime.Now);
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            DateTime lastmonth = DateTime.Now - TimeSpan.FromDays(30);
            dateEdit2.DateTime = lastmonth;
           Populategrid(lastmonth, DateTime.Now);
        }

        private void simpleButton8_Click(object sender, EventArgs e)
        {
            DateTime lastmonth = DateTime.Now - TimeSpan.FromDays(360);
            dateEdit2.DateTime = lastmonth;
            Populategrid(lastmonth, DateTime.Now);
        }

        private void dateEdit2_EditValueChanged(object sender, EventArgs e)
        {
           
            Populategrid(dateEdit1.DateTime, dateEdit2.DateTime);
        }

        private void GeneralBox_Load(object sender, EventArgs e)
        {
            DateTime lastmonth = DateTime.Now - TimeSpan.FromDays(7);
            Populategrid(lastmonth, DateTime.Now);
            //chartControl1.DataSource = operationoptions.GetServices(lastmonth, DateTime.Now);
            //dateEdit1.DateTime = DateTime.Now;
            //dateEdit2.DateTime = DateTime.Now;
        }

        private void Populategrid(DateTime from, DateTime to)
        {
            if (loggeduser.UserTypeID == 1)
            {
                gridControl1.DataSource = operationoptions.GetServices(from, to);
            }
            else
            {
                gridControl1.DataSource = operationoptions.GetServices(from, to, loggeduser.UserID);

            }

            gridView1.RefreshData();

        }
    }
}
